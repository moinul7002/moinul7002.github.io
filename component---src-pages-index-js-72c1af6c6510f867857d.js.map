{"version":3,"sources":["webpack:///./src/components/Project.js","webpack:///./src/components/Projects.js","webpack:///./src/components/Hero.js","webpack:///./src/constants/services.js","webpack:///./src/components/Services.js","webpack:///./src/components/Jobs.js","webpack:///./src/components/Educations.js","webpack:///./src/pages/index.js","webpack:///./src/components/Blog.js","webpack:///./src/components/Blogs.js"],"names":["Project","desc","title","github","stack","url","image","category","showLink","className","fluid","childImageSharp","map","item","key","id","href","Projects","projects","Title","project","index","to","Hero","file","icon","text","Services","services","service","Jobs","jobs","allStrapiJobs","nodes","React","useState","value","setValue","position","company","location","duration","strapiId","onClick","Educations","allStrapiEducations","major","degree","institution","year","query","data","allStrapiProjects","blogs","allStrapiBlogs","Layout","Blogs","Publication","date","slug","blog","Blog"],"mappings":"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","file":"component---src-pages-index-js-72c1af6c6510f867857d.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Image from \"gatsby-image\"\r\nimport { FaGithubSquare, FaShareSquare } from \"react-icons/fa\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Project = ({\r\n  desc,\r\n  title,\r\n  github,\r\n  stack,\r\n  url,\r\n  image,\r\n  category,\r\n  showLink,\r\n}) => {\r\n  return (\r\n    <section className=\"project\">\r\n      {image && (\r\n        <Image fluid={image.childImageSharp.fluid} className=\"project-img\" />\r\n      )}\r\n      <div className=\"project-info\">\r\n        <div className=\"project-stack\">\r\n          <span>{category}</span>\r\n        </div>\r\n        <h3>{title || \"default title\"}</h3>\r\n        <p className=\"project-desc\">{desc}</p>\r\n        <div className=\"project-stack\">\r\n          {stack.map(item => {\r\n            return <span key={item.id}>{item.title}</span>\r\n          })}\r\n        </div>\r\n        <div className=\"project-links\">\r\n          <a href={github}>\r\n            <FaGithubSquare className=\"project-icon\" />\r\n          </a>\r\n          <a href={url}>\r\n            <FaShareSquare className=\"project-icon\" />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nProject.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  github: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n  category: PropTypes.string.isRequired,\r\n  desc: PropTypes.string.isRequired,\r\n  image: PropTypes.object.isRequired,\r\n  stack: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n}\r\n\r\nexport default Project\r\n","import React from \"react\"\r\nimport Title from \"./Title\"\r\nimport Project from \"./Project\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Projects = ({ projects, title, showLink }) => {\r\n  return (\r\n    <section className=\"section projects bg-grey\">\r\n      <Title title={title} />\r\n      <div className=\"section-center projects-center\">\r\n        {projects.map((project, index) => {\r\n          return <Project key={project.id} index={index} {...project} />\r\n        })}\r\n      </div>\r\n      {showLink && (\r\n        <Link to=\"/projects\" className=\"btn center-btn\">\r\n          all projects\r\n        </Link>\r\n      )}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Projects\r\n","import React from \"react\"\r\nimport Image from \"gatsby-image\"\r\nimport { Link } from \"gatsby\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport SocialLinks from \"../constants/socialLinks\"\r\n// ...GatsbyImageSharpFluid\r\n\r\nconst query = graphql`\r\n  {\r\n    file(relativePath: { eq: \"moinul5.jpg\" }) {\r\n      childImageSharp {\r\n        fluid {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst Hero = () => {\r\n  const {\r\n    file: {\r\n      childImageSharp: { fluid },\r\n    },\r\n  } = useStaticQuery(query)\r\n\r\n  return (\r\n    <header className=\"hero\">\r\n      <div className=\"section-center hero-center\">\r\n        <article className=\"hero-info\">\r\n          <div>\r\n            <div className=\"underline\"></div>\r\n            <h1>i'm Moinul</h1>\r\n            <h4>Software Engineer & AI Practitioner</h4>\r\n            <Link to=\"/contact\" className=\"btn\">\r\n              contact me\r\n            </Link>\r\n            <SocialLinks />\r\n          </div>\r\n        </article>\r\n        <Image fluid={fluid} className=\"hero-img\" />\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\nexport default Hero\r\n","import React from \"react\"\r\nimport {\r\n  FaCode,\r\n  FaSketch,\r\n  FaAndroid,\r\n  FaCodeBranch,\r\n  FaDatabase,\r\n  FaDev,\r\n  FaMix,\r\n} from \"react-icons/fa\"\r\nexport default [\r\n  {\r\n    id: 1,\r\n    icon: <FaCode className=\"service-icon\" />,\r\n    title: \"Coding\",\r\n    text: `C, C++, Python, PHP`,\r\n  },\r\n  {\r\n    id: 2,\r\n    icon: <FaSketch className=\"service-icon\" />,\r\n    title: \"Web Development\",\r\n    text: `HTML5, CSS3, GraphQL, javaScript, ES6, Laravel, Django`,\r\n  },\r\n  {\r\n    id: 3,\r\n    icon: <FaDev className=\"service-icon\" />,\r\n    title: \"Development Tools\",\r\n    text: `Linux, Git, Docker, AWS, Jupyter Notebook, Google Colab`,\r\n  },\r\n  {\r\n    id: 4,\r\n    icon: <FaDatabase className=\"service-icon\" />,\r\n    title: \"Big Data\",\r\n    text: `Statistical Analysis, Data Mining & Modeling, Database Management`,\r\n  },\r\n  {\r\n    id: 5,\r\n    icon: <FaMix className=\"service-icon\" />,\r\n    title: \"Machine Learning\",\r\n    text: `Scikit-learn, Keras, TensorFlow, NumPy, Pandas, Matplotlib, Librosa etc.`,\r\n  },\r\n]\r\n","import React from \"react\"\r\nimport Title from \"./Title\"\r\nimport services from \"../constants/services\"\r\nconst Services = () => {\r\n  return (\r\n    <section className=\"section\">\r\n      <Title title=\"Technical Skills\" />\r\n      <div className=\"section-center services-center\">\r\n        {services.map(service => {\r\n          const { id, icon, title, text } = service\r\n\r\n          return (\r\n            <article key={id} className=\"service\">\r\n              {icon}\r\n              <h4>{title}</h4>\r\n              <div className=\"underline\"></div>\r\n              <p>{text}</p>\r\n            </article>\r\n          )\r\n        })}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Services\r\n","import React from \"react\"\r\nimport Title from \"./Title\"\r\nimport { FaAngleDoubleRight } from \"react-icons/fa\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst query = graphql`\r\n  {\r\n    allStrapiJobs(sort: { fields: strapiId, order: DESC }) {\r\n      nodes {\r\n        strapiId\r\n        company\r\n        position\r\n        location\r\n        duration\r\n        desc {\r\n          id\r\n          title\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst Jobs = () => {\r\n  const data = useStaticQuery(query)\r\n  const {\r\n    allStrapiJobs: { nodes: jobs },\r\n  } = data\r\n  const [value, setValue] = React.useState(0)\r\n  const { company, position, location, duration, desc } = jobs[value]\r\n\r\n  return (\r\n    <section className=\"section jobs\">\r\n      <Title title=\"experience\" />\r\n      <div className=\"jobs-center\">\r\n        {/* btn container */}\r\n        <div className=\"btn-container\">\r\n          {jobs.map((item, index) => {\r\n            return (\r\n              <button\r\n                key={item.strapiId}\r\n                onClick={() => setValue(index)}\r\n                className={`job-btn ${index === value && \"active-btn\"}`}\r\n              >\r\n                {item.company}\r\n              </button>\r\n            )\r\n          })}\r\n        </div>\r\n        {/* job info */}\r\n        <article className=\"job-info\">\r\n          <h3>{position}</h3>\r\n          <h4>{location}</h4>\r\n          {/* <h5>{location}</h5> */}\r\n          <p className=\"job-date\">{duration}</p>\r\n          {desc.map(item => {\r\n            return (\r\n              <div key={item.id} className=\"job-desc\">\r\n                <FaAngleDoubleRight className=\"job-icon\"></FaAngleDoubleRight>\r\n                <p>{item.title}</p>\r\n              </div>\r\n            )\r\n          })}\r\n        </article>\r\n      </div>\r\n      <Link to=\"/about\" className=\"btn center-btn\">\r\n        about me\r\n      </Link>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Jobs\r\n","import React from \"react\"\r\nimport Title from \"./Title\"\r\nimport { FaAngleDoubleRight } from \"react-icons/fa\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst query = graphql`\r\n  {\r\n    allStrapiEducations(sort: { fields: strapiId, order: DESC }) {\r\n      nodes {\r\n        strapiId\r\n        degree\r\n        major\r\n        institution\r\n        year\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst Educations = () => {\r\n  const data = useStaticQuery(query)\r\n  const {\r\n    allStrapiEducations: { nodes: jobs },\r\n  } = data\r\n  const [value, setValue] = React.useState(0)\r\n  const { degree, major, institution, year } = jobs[value]\r\n\r\n  return (\r\n    <section className=\"section jobs bg-grey\">\r\n      <Title title=\"Education\" />\r\n      <div className=\"jobs-center\">\r\n        {/* btn container */}\r\n        <div className=\"btn-container\">\r\n          {jobs.map((item, index) => {\r\n            return (\r\n              <button\r\n                key={item.strapiId}\r\n                onClick={() => setValue(index)}\r\n                className={`job-btn ${index === value && \"active-btn\"}`}\r\n              >\r\n                {item.degree}\r\n              </button>\r\n            )\r\n          })}\r\n        </div>\r\n        {/* job info */}\r\n        <article className=\"job-info\">\r\n          <h3>{major}</h3>\r\n          <h4>{institution}</h4>\r\n          {/* <h5>{location}</h5> */}\r\n          <p className=\"job-date\">{year}</p>\r\n        </article>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Educations\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/Layout\"\r\nimport Hero from \"../components/Hero\"\r\nimport Services from \"../components/Services\"\r\nimport Jobs from \"../components/Jobs\"\r\nimport Projects from \"../components/Projects\"\r\nimport Blogs from \"../components/Blogs\"\r\nimport Educations from \"../components/Educations\"\r\n\r\nexport default ({ data }) => {\r\n  const {\r\n    allStrapiProjects: { nodes: projects },\r\n    allStrapiBlogs: { nodes: blogs },\r\n    // allstrapiEducations: { nodes: educations}\r\n  } = data\r\n\r\n  return (\r\n    <Layout>\r\n      <Hero />\r\n      <Blogs blogs={blogs} title=\"Publication\" showLink />\r\n      <Jobs />\r\n      <Educations />\r\n      <Services />\r\n      <Projects projects={projects} title=\"Featured Projects\" showLink />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  {\r\n    allStrapiProjects(\r\n      filter: { featured: { eq: true } }\r\n      sort: { fields: strapiId, order: DESC }\r\n      limit: 3\r\n    ) {\r\n      nodes {\r\n        github\r\n        strapiId\r\n        desc\r\n        title\r\n        url\r\n        category\r\n        image {\r\n          childImageSharp {\r\n            fluid {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n        stack {\r\n          id\r\n          title\r\n        }\r\n      }\r\n    }\r\n    allStrapiBlogs(sort: { fields: date, order: DESC }, limit: 3) {\r\n      nodes {\r\n        slug\r\n        strapiId\r\n        content\r\n        desc\r\n        date(formatString: \"MMMM Do, YYYY\")\r\n        id\r\n        title\r\n        category\r\n        image {\r\n          childImageSharp {\r\n            fluid {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Image from \"gatsby-image\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Publication = ({ id, title, image, date, category, slug, desc }) => {\r\n  return (\r\n    <Link to={`/publications/${slug}`} className=\"blog\" key={id}>\r\n      <article>\r\n        {image && (\r\n          <Image fluid={image.childImageSharp.fluid} className=\"blog-img\" />\r\n        )}\r\n        <div className=\"blog-card\">\r\n          <h4>{title}</h4>\r\n          <p>{desc}</p>\r\n          <div className=\"blog-footer\">\r\n            <p>{category}</p>\r\n            <p>{date}</p>\r\n          </div>\r\n        </div>\r\n      </article>\r\n    </Link>\r\n  )\r\n}\r\n\r\nPublication.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  category: PropTypes.string.isRequired,\r\n  desc: PropTypes.string.isRequired,\r\n  slug: PropTypes.string.isRequired,\r\n  image: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Publication\r\n","import React from \"react\"\r\nimport Title from \"./Title\"\r\nimport Blog from \"./Blog\"\r\nimport { Link } from \"gatsby\"\r\n\r\nexport const Blogs = ({ blogs, title, showLink }) => {\r\n  return (\r\n    <section className=\"section bg-grey\">\r\n      <Title title={title} />\r\n      <div className=\"section-center blogs-center\">\r\n        {blogs.map(blog => {\r\n          return <Blog key={blog.id} {...blog} />\r\n        })}\r\n      </div>\r\n      {showLink && (\r\n        <Link to=\"/publications\" className=\"btn center-btn\">\r\n          Show All\r\n        </Link>\r\n      )}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Blogs\r\n"],"sourceRoot":""}