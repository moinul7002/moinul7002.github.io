{"version":3,"sources":["webpack:///./src/components/Project.js","webpack:///./src/components/Projects.js","webpack:///./src/components/Hero.js","webpack:///./src/constants/services.js","webpack:///./src/components/Services.js","webpack:///./src/components/Jobs.js","webpack:///./src/components/Educations.js","webpack:///./src/pages/index.js","webpack:///./src/components/Blog.js","webpack:///./src/components/Blogs.js"],"names":["Project","_ref","desc","title","github","stack","url","image","category","React","createElement","className","Image","fluid","childImageSharp","map","item","key","id","href","FaGithubSquare","FaShareSquare","Projects","projects","showLink","Title","project","index","Object","assign","Link","to","Hero","file","useStaticQuery","SocialLinks","icon","FaCode","text","FaDev","FaDatabase","FaMix","Services","services","service","Jobs","data","allStrapiJobs","nodes","jobs","value","setValue","useState","company","position","location","duration","strapiId","onClick","FaAngleDoubleRight","align","Educations","allStrapiEducations","degree","major","institution","year","allStrapiProjects","allStrapiBlogs","blogs","Layout","Blogs","Publication","date","slug","blog","Blog"],"mappings":"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","file":"component---src-pages-index-js-66f5f08785358bfaf1b3.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Image from \"gatsby-image\"\r\nimport { FaGithubSquare, FaShareSquare } from \"react-icons/fa\"\r\n\r\nconst Project = ({ desc, title, github, stack, url, image, category }) => {\r\n  return (\r\n    <article className=\"project\">\r\n      {image && (\r\n        <Image fluid={image.childImageSharp.fluid} className=\"project-img\" />\r\n      )}\r\n      <div className=\"project-info\">\r\n        <div className=\"project-stack\">\r\n          <span>{category}</span>\r\n        </div>\r\n        <h3>{title || \"default title\"}</h3>\r\n        <p className=\"project-desc\">{desc}</p>\r\n        <div className=\"project-stack\">\r\n          {stack.map(item => {\r\n            return <span key={item.id}>{item.title}</span>\r\n          })}\r\n        </div>\r\n        <div className=\"project-links\">\r\n          <a href={github}>\r\n            <FaGithubSquare className=\"project-icon\" />\r\n          </a>\r\n          <a href={url}>\r\n            <FaShareSquare className=\"project-icon\" />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  )\r\n}\r\n\r\nProject.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  github: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n  category: PropTypes.string.isRequired,\r\n  desc: PropTypes.string.isRequired,\r\n  image: PropTypes.object.isRequired,\r\n  stack: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n}\r\n\r\nexport default Project\r\n","import React from \"react\"\r\nimport Title from \"./Title\"\r\nimport Project from \"./Project\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Projects = ({ projects, title, showLink }) => {\r\n  return (\r\n    <section className=\"section projects bg-grey\">\r\n      <Title title={title} />\r\n      <div className=\"section-center projects-center\">\r\n        {projects.map((project, index) => {\r\n          return <Project key={project.id} index={index} {...project} />\r\n        })}\r\n      </div>\r\n      {showLink && (\r\n        <Link to=\"/projects\" className=\"btn center-btn\">\r\n          projects\r\n        </Link>\r\n      )}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Projects\r\n","import React from \"react\"\r\nimport Image from \"gatsby-image\"\r\nimport { Link } from \"gatsby\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport SocialLinks from \"../constants/socialLinks\"\r\n// ...GatsbyImageSharpFluid\r\n\r\nconst query = graphql`\r\n  {\r\n    file(relativePath: { eq: \"moinul8.JPG\" }) {\r\n      childImageSharp {\r\n        fluid {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst Hero = () => {\r\n  const {\r\n    file: {\r\n      childImageSharp: { fluid },\r\n    },\r\n  } = useStaticQuery(query)\r\n\r\n  return (\r\n    <header className=\"hero\">\r\n      <div className=\"section-center hero-center\">\r\n        <article className=\"hero-info\">\r\n          <div>\r\n            <div className=\"underline\"></div>\r\n            <h1>i'm Moinul</h1>\r\n            <h4>Data Scientist &</h4>\r\n            <h4>Artificial Intelligence Enthusiast</h4>\r\n            <Link to=\"/contact\" className=\"btn\">\r\n              contact me\r\n            </Link>\r\n            <SocialLinks />\r\n          </div>\r\n        </article>\r\n        <Image fluid={fluid} className=\"hero-img\" />\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\nexport default Hero\r\n","import React from \"react\"\r\nimport {\r\n  FaCode,\r\n  FaSketch,\r\n  FaAndroid,\r\n  FaCodeBranch,\r\n  FaDatabase,\r\n  FaDev,\r\n  FaMix,\r\n} from \"react-icons/fa\"\r\nexport default [\r\n  {\r\n    id: 1,\r\n    icon: <FaCode className=\"service-icon\" />,\r\n    title: \"Coding\",\r\n    text: `C, C++, Python, R, Matlab`,\r\n  },\r\n  // {\r\n  //   id: 2,\r\n  //   icon: <FaSketch className=\"service-icon\" />,\r\n  //   title: \"Web Development\",\r\n  //   text: `HTML5, CSS3, GraphQL, JavaScript, Django`,\r\n  // },\r\n  {\r\n    id: 3,\r\n    icon: <FaDev className=\"service-icon\" />,\r\n    title: \"Developer Tools\",\r\n    text: `Linux, Git, Docker, SSRS, Django`,\r\n  },\r\n  {\r\n    id: 4,\r\n    icon: <FaDatabase className=\"service-icon\" />,\r\n    title: \"Big Data Tools\",\r\n    text: `NoSQL (MongoDB), SQL (MySQL, PostgreSQL, SQL Server), Power BI, Azure Data Factory, Azure Data Lake Storage`,\r\n  },\r\n  {\r\n    id: 5,\r\n    icon: <FaMix className=\"service-icon\" />,\r\n    title: \"Machine Learning\",\r\n    text: `Pandas, NumPy, Keras, Scikit-Learn, TensorFlow 2.0, MatPlotlib, PyTorch, Scrapy, NLTK, Gensim, Scipy`,\r\n  },\r\n]\r\n","import React from \"react\"\r\nimport Title from \"./Title\"\r\nimport services from \"../constants/services\"\r\nconst Services = () => {\r\n  return (\r\n    <section className=\"section\">\r\n      <Title title=\"Technical Skills\" />\r\n      <div className=\"section-center services-center\">\r\n        {services.map(service => {\r\n          const { id, icon, title, text } = service\r\n\r\n          return (\r\n            <article key={id} className=\"service\">\r\n              {icon}\r\n              <h4>{title}</h4>\r\n              <div className=\"underline\"></div>\r\n              <p>{text}</p>\r\n            </article>\r\n          )\r\n        })}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Services\r\n","import React from \"react\"\r\nimport Title from \"./Title\"\r\nimport { FaAngleDoubleRight } from \"react-icons/fa\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst query = graphql`\r\n  {\r\n    allStrapiJobs(sort: { fields: strapiId, order: DESC }) {\r\n      nodes {\r\n        strapiId\r\n        company\r\n        position\r\n        location\r\n        duration\r\n        desc {\r\n          id\r\n          title\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst Jobs = () => {\r\n  const data = useStaticQuery(query)\r\n  const {\r\n    allStrapiJobs: { nodes: jobs },\r\n  } = data\r\n  const [value, setValue] = React.useState(0)\r\n  const { company, position, location, duration, desc } = jobs[value]\r\n\r\n  return (\r\n    <section className=\"section jobs\">\r\n      <Title title=\"experience\" />\r\n      <div className=\"jobs-center\">\r\n        {/* btn container */}\r\n        <div className=\"btn-container\">\r\n          {jobs.map((item, index) => {\r\n            return (\r\n              <button\r\n                key={item.strapiId}\r\n                onClick={() => setValue(index)}\r\n                className={`job-btn ${index === value && \"active-btn\"}`}\r\n              >\r\n                {item.company}\r\n              </button>\r\n            )\r\n          })}\r\n        </div>\r\n        {/* job info */}\r\n        <article className=\"job-info\">\r\n          <h3>{position}</h3>\r\n          <h4>{location}</h4>\r\n          {/* <h5>{location}</h5> */}\r\n          <p className=\"job-date\">{duration}</p>\r\n          {desc.map(item => {\r\n            return (\r\n              <div key={item.id} className=\"job-desc\">\r\n                <FaAngleDoubleRight className=\"job-icon\"></FaAngleDoubleRight>\r\n                <p align=\"justify\">{item.title}</p>\r\n              </div>\r\n            )\r\n          })}\r\n        </article>\r\n      </div>\r\n      <Link to=\"/about\" className=\"btn center-btn\">\r\n        about me\r\n      </Link>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Jobs\r\n","import React from \"react\"\r\nimport Title from \"./Title\"\r\nimport { FaAngleDoubleRight } from \"react-icons/fa\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst query = graphql`\r\n  {\r\n    allStrapiEducations(sort: { fields: strapiId, order: DESC }) {\r\n      nodes {\r\n        strapiId\r\n        degree\r\n        major\r\n        institution\r\n        year\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst Educations = () => {\r\n  const data = useStaticQuery(query)\r\n  const {\r\n    allStrapiEducations: { nodes: jobs },\r\n  } = data\r\n  const [value, setValue] = React.useState(0)\r\n  const { degree, major, institution, year } = jobs[value]\r\n\r\n  return (\r\n    <section className=\"section jobs bg-grey\">\r\n      <Title title=\"Education\" />\r\n      <div className=\"jobs-center\">\r\n        {/* btn container */}\r\n        <div className=\"btn-container\">\r\n          {jobs.map((item, index) => {\r\n            return (\r\n              <button\r\n                key={item.strapiId}\r\n                onClick={() => setValue(index)}\r\n                className={`job-btn ${index === value && \"active-btn\"}`}\r\n              >\r\n                {item.degree}\r\n              </button>\r\n            )\r\n          })}\r\n        </div>\r\n        {/* job info */}\r\n        <article className=\"job-info\">\r\n          <h3>{major}</h3>\r\n          <h4>{institution}</h4>\r\n          {/* <h5>{location}</h5> */}\r\n          <p className=\"job-date\">{year}</p>\r\n        </article>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Educations\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/Layout\"\r\nimport Hero from \"../components/Hero\"\r\nimport Services from \"../components/Services\"\r\nimport Jobs from \"../components/Jobs\"\r\nimport Projects from \"../components/Projects\"\r\nimport Blogs from \"../components/Blogs\"\r\nimport Educations from \"../components/Educations\"\r\n\r\nexport default ({ data }) => {\r\n  const {\r\n    allStrapiProjects: { nodes: projects },\r\n    allStrapiBlogs: { nodes: blogs },\r\n    // allstrapiEducations: { nodes: educations}\r\n  } = data\r\n\r\n  return (\r\n    <Layout>\r\n      <Hero />\r\n      <Jobs />\r\n      <Educations />\r\n      <Blogs blogs={blogs} title=\"Publication\" showLink />\r\n      <Services />\r\n      <Projects projects={projects} title=\"Featured Projects\" showLink />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  {\r\n    allStrapiProjects(\r\n      filter: { featured: { eq: true } }\r\n      sort: { fields: strapiId, order: DESC }\r\n      limit: 3\r\n    ) {\r\n      nodes {\r\n        github\r\n        strapiId\r\n        desc\r\n        title\r\n        url\r\n        category\r\n        image {\r\n          childImageSharp {\r\n            fluid {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n        stack {\r\n          id\r\n          title\r\n        }\r\n      }\r\n    }\r\n    allStrapiBlogs(sort: { fields: strapiId, order: DESC }, limit: 3) {\r\n      nodes {\r\n        slug\r\n        strapiId\r\n        content\r\n        desc\r\n        date(formatString: \"MMMM Do, YYYY\")\r\n        id\r\n        title\r\n        category\r\n        image {\r\n          childImageSharp {\r\n            fluid {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Image from \"gatsby-image\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Publication = ({ id, title, image, date, category, slug, desc }) => {\r\n  return (\r\n    <Link to={`/publications/${slug}`} className=\"blog\" key={id}>\r\n      <article>\r\n        {image && (\r\n          <Image fluid={image.childImageSharp.fluid} className=\"blog-img\" />\r\n        )}\r\n        <div className=\"blog-card\">\r\n          <h4>{title}</h4>\r\n          <p align=\"justify\">{desc}</p>\r\n          <div className=\"blog-footer\">\r\n            <p>{category}</p>\r\n            <p>{date}</p>\r\n          </div>\r\n        </div>\r\n      </article>\r\n    </Link>\r\n  )\r\n}\r\n\r\nPublication.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  category: PropTypes.string.isRequired,\r\n  desc: PropTypes.string.isRequired,\r\n  slug: PropTypes.string.isRequired,\r\n  image: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Publication\r\n","import React from \"react\"\r\nimport Title from \"./Title\"\r\nimport Blog from \"./Blog\"\r\nimport { Link } from \"gatsby\"\r\n\r\nexport const Blogs = ({ blogs, title, showLink }) => {\r\n  return (\r\n    <section className=\"section bg-grey\">\r\n      <Title title={title} />\r\n      <div className=\"section-center blogs-center\">\r\n        {blogs.map(blog => {\r\n          return <Blog key={blog.id} {...blog} />\r\n        })}\r\n      </div>\r\n      {showLink && (\r\n        <Link to=\"/publications\" className=\"btn center-btn\">\r\n          Show All\r\n        </Link>\r\n      )}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Blogs\r\n"],"sourceRoot":""}